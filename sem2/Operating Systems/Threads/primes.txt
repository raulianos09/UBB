#include <stdio.h>
#include <pthread.h>


#define NTHREADS 200
int counter = 0;
int n=1;
pthread_mutex_t mtx;


int isPrime(int n)
{
        if(n==2)
                return 0;
        if(n%2==0 || n < 2)
                return 1;

        int d;
        for(d=3; d*d <=n; d+=2)
                if(n%d == 0)
                        return 0;
        return 1;
}

void *thread_function(void* ptr)
{
        pthread_mutex_lock(&mtx);
        n++;
        if(isPrime(n) == 1)
                counter++;
        pthread_mutex_unlock(&mtx);

        return NULL;
}

int  main()
{
        time_t t1 = time(NULL);

        pthread_t thread_id[NTHREADS];
        pthread_mutex_init(&mtx, NULL);

        int i, j;

        for(i=0; i < NTHREADS; i++)
        {
                pthread_create(&thread_id[i], NULL, thread_function, NULL);
        }

        for(j=0; j < NTHREADS; j++)
        {
                pthread_join(thread_id[j], NULL);
        }

        pthread_mutex_destroy(&mtx);

        time_t t2 = time(NULL);
        double time_diff = difftime(t2, t1);
        printf("Found %d prime numbers in %.0f\n", counter, time_diff);

        return 1;
